[{"/Users/chamira/netlix-clone/src/index.js":"1","/Users/chamira/netlix-clone/src/App.js":"2","/Users/chamira/netlix-clone/src/Row.jsx":"3","/Users/chamira/netlix-clone/src/DatabaseRoutes.js":"4","/Users/chamira/netlix-clone/src/MoviePoster.jsx":"5","/Users/chamira/netlix-clone/src/Highlight.jsx":"6","/Users/chamira/netlix-clone/src/Banner.jsx":"7"},{"size":220,"mtime":1607494440910,"results":"8","hashOfConfig":"9"},{"size":1104,"mtime":1607577503452,"results":"10","hashOfConfig":"9"},{"size":959,"mtime":1607564142329,"results":"11","hashOfConfig":"9"},{"size":2102,"mtime":1607562231492,"results":"12","hashOfConfig":"9"},{"size":440,"mtime":1607566527521,"results":"13","hashOfConfig":"9"},{"size":960,"mtime":1607576684202,"results":"14","hashOfConfig":"9"},{"size":435,"mtime":1607580650164,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10nlfle",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/chamira/netlix-clone/src/index.js",[],["35","36"],"/Users/chamira/netlix-clone/src/App.js",[],"/Users/chamira/netlix-clone/src/Row.jsx",["37","38"],"import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport requests from './DatabaseRoutes'\nimport './Row.css'\nimport MoviePoster from './MoviePoster'\n\nconst Row = ({name, fetch, isImportant}) => {\n    const [movies, setMovies] = useState([]); \n\n    useEffect(() => { \n        const getData = async () => {\n            await axios.get(fetch).then((res) => {\n                \n                setMovies(res.data.results); \n            })\n        }\n        getData(); \n    },[])\n\n\n\n    return (\n        <div className = \"Row\"> \n          <div className = \"Row__title\">\n          {name}\n          </div>\n          <div className = \"Row__posters\"> \n          {isImportant ? movies.map(movie => {\n              return <MoviePoster url={movie.backdrop_path}/>\n          }) :    movies.map(movie => {\n              return <MoviePoster url={movie.poster_path}/>\n          })}\n       \n          </div>\n        </div>\n    )\n}\n\nexport default Row; ","/Users/chamira/netlix-clone/src/DatabaseRoutes.js",[],"/Users/chamira/netlix-clone/src/MoviePoster.jsx",["39","40"],"import React from 'react'\nimport './MoviePoster.css'\n\n\n\nconst MoviePoster = ({url, isHighLight}) => {\n   \n    const path = isHighLight ? `https://image.tmdb.org/t/p/original${url}` : `https://image.tmdb.org/t/p/w500${url}`; \n    \n\n\n    return (\n        <div>\n     \n            {isHighLight ? <img className=\"highlight__image\"src={path} />  : <img className=\"poster__image\"src={path} /> }\n        </div>\n    )\n}\n\nexport default MoviePoster; ","/Users/chamira/netlix-clone/src/Highlight.jsx",["41"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport MoviePoster from './MoviePoster'\nimport './Highlight.css'\n\n\nconst Highlight = ({fetch}) => {\n    const [movies, setMovie] = useState([]); \n\n    useEffect(() => { \n        const number = Math.round(Math.random() * (20 - 1) + 1); \n       \n        const getData = async () => {\n            await axios.get(fetch).then((res) => {\n        \n                setMovie(res.data.results[number]); \n            })\n        }\n        getData(); \n    },[])\n\n\n\n    return ( \n        <div className = \"Highlight\"> \n         <div className= \"Highlight__Title\">\n             {movies.title}\n         </div>\n         <div className= \"Highlight__Overview\">\n             {movies.overview}\n         </div>\n          <div className = \"Highlight__Image\">\n             \n            <MoviePoster url={movies.backdrop_path} isHighLight/>\n          </div>\n        </div>\n    )\n}\n\nexport default Highlight; ","/Users/chamira/netlix-clone/src/Banner.jsx",["42","43"],"import React from 'react' \nimport './Banner.css'\n\n\nconst Banner = () => {\n\n\n    return (\n        <div className=\"Banner\">\n             <img className=\"Banner__logo\" src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg\"/>\n             <img className=\"Banner__user\" src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"/>\n        </div>\n       \n    )\n}\n\nexport default Banner; ",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":18,"column":7,"nodeType":"54","endLine":18,"endColumn":9,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":28,"nodeType":"58","endLine":15,"endColumn":74},{"ruleId":"56","severity":1,"message":"57","line":15,"column":78,"nodeType":"58","endLine":15,"endColumn":121},{"ruleId":"52","severity":1,"message":"53","line":20,"column":7,"nodeType":"54","endLine":20,"endColumn":9,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"57","line":10,"column":14,"nodeType":"58","endLine":10,"endColumn":119},{"ruleId":"56","severity":1,"message":"57","line":11,"column":14,"nodeType":"58","endLine":11,"endColumn":139},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'requests' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["62"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"64","fix":"66"},"Update the dependencies array to be: [fetch]",{"range":"67","text":"68"},{"range":"69","text":"68"},[495,497],"[fetch]",[522,524]]